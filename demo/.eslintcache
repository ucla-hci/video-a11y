[{"/Users/mina/Desktop/video-a11y/demo/src/index.js":"1","/Users/mina/Desktop/video-a11y/demo/src/App.js":"2","/Users/mina/Desktop/video-a11y/demo/src/reportWebVitals.js":"3","/Users/mina/Desktop/video-a11y/demo/src/components/Home.js":"4","/Users/mina/Desktop/video-a11y/demo/src/components/Timeline.js":"5","/Users/mina/Desktop/video-a11y/demo/src/scripts.js":"6","/Users/mina/Desktop/video-a11y/demo/src/components/Segments.js":"7"},{"size":500,"mtime":1610802378864,"results":"8","hashOfConfig":"9"},{"size":378,"mtime":1610801671422,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610802378865,"results":"11","hashOfConfig":"9"},{"size":7612,"mtime":1611663128360,"results":"12","hashOfConfig":"9"},{"size":1410,"mtime":1610803316178,"results":"13","hashOfConfig":"9"},{"size":248,"mtime":1610801681194,"results":"14","hashOfConfig":"9"},{"size":7005,"mtime":1611664461072,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ry2g01",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mina/Desktop/video-a11y/demo/src/index.js",[],["34","35"],"/Users/mina/Desktop/video-a11y/demo/src/App.js",["36"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home'\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    \n    return (\n      <Router>\n          <Route exact path=\"/\" component={Home}></Route>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/Users/mina/Desktop/video-a11y/demo/src/reportWebVitals.js",[],"/Users/mina/Desktop/video-a11y/demo/src/components/Home.js",["37","38","39","40","41","42","43","44"],"import React, { Component } from 'react';\nimport ReactPlayer from 'react-player'\nimport { Header, Button, Image, Message } from 'semantic-ui-react';\nimport classNames from 'classnames';\nimport '../App.css';\nimport Timeline from './Timeline';\nimport Segments from './Segments';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport {clips} from '../scripts';\nimport { Clickable } from 'react-clickable';\nimport Blink from 'react-blink-text';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            playing: false,\n            playbackRate: 1.0,\n            modalOpen: true,\n            hover: false,\n            message: false,\n            videoID: 'GMVbQ1UsMP8',\n            listening: false,\n            transcript:'',\n            option_suggestions: [],\n            option_indexes: [],\n            time_options: [1, 20, 130, 200, 300],\n            content_options: [\"hi\", \"hi\", \"here\", \"here\", \"hi\"],\n            keyword_indexes: [[],[],[],[]],\n            current_level: 1,\n        }\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.jumpVideo  = this.jumpVideo.bind(this);\n    }\n\n\n    componentDidMount() {\n    }\n\n\n    handleProgress = state => {\n      // We only want to update time slider if we are not currently seeking\n      this.setState(state);\n    }\n  \n    handleDuration = (duration) => {\n      this.setState({ duration });\n    }\n\n    ref = player => {\n        this.player = player;\n    }\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true });\n    };\n    handleDrawerClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSubmit(videoID) {\n        this.setState({start: 0, videoID: videoID, url: '', navigations: [], bookmarks: [],\n          current_query: '',\n          playing: true,\n          transcript: '',\n          suggestions: [],\n          option_suggestions: [],\n          option_indexes: [],\n          time_options: [],\n          content_options: [],\n          keyword_indexes: [],\n          current_level: 0,\n        })\n        console.log(\"changed the video\", videoID);\n        this.handleDrawerClose();\n    }\n\n    jumpVideo(time, abs=false){\n        if(abs){\n            this.player.seekTo(time);\n        }\n        else{\n            this.player.seekTo(this.state.playedSeconds + time);\n        }\n    }\n    \n    \n    \n    render() {\n        const { videoID, playing, playbackRate, listening, transcript} = this.state;\n        const { addFlag, flagClickHandler, showFlags, addParticipationPoint } = this;\n\n        return (\n            <div className=\"Home\">\n                <div className=\"header-bar\">\n                    <div className=\"header-title\">\n                        <Header as=\"h2\">\n                            Video A11y\n                        </Header>\n                    </div>   \n                    <IconButton\n                        aria-label=\"Open drawer\"\n                        onClick={this.handleDrawerOpen}>\n                        <MenuIcon style={{ fontSize: '30px'}}/>\n                    </IconButton>\n                    <Drawer\n                        classes={{\n                            paper: classNames(\"drawerPaper\", !this.state.open && \"drawerPaperClose\"),\n                        }}\n                        open={this.state.open} anchor=\"right\" >\n                        <div>\n                            <IconButton onClick={this.handleDrawerClose}>\n                            <ChevronRightIcon />\n                            </IconButton>\n                        </div>\n                        <Divider />\n                        {clips.map((clip, index) => (\n                            <div key={index}>\n                            <Button style={{ fontSize: '12px', width: '100%', paddingTop: '10%', paddingBottom: '12%' }} key={clip}\n                                onClick={() => this.handleSubmit(clip.videoID)}>\n                                <img src={clip.image} style={{width: '70%', height: '70%', }} />\n                                <div style={{ position: 'absolute' }}>\n                                {clip.title}\n                                </div>\n                            </Button>\n                            </div>\n                        ))}\n                    </Drawer>\n                </div>\n                <Container className=\"upper-page\">\n                <div className=\"split-left\"  tabIndex=\"1\" >\n                    <div className=\"search-bar-top\">\n                        <div className=\"last-command\">{this.state.last_query}</div>\n                    </div>\n                </div>\n                <div className=\"split-center\"  tabIndex=\"1\" >\n                    <Row className=\"main-video\">\n                        <ReactPlayer ref={this.ref} playing={this.state.playing}\n                            playbackRate={playbackRate} id=\"video\"  width=\"100%\" height=\"100%\" controls url = {`https://www.youtube.com/watch?v=${videoID}`} onPause={this._onPause}\n                            onPlay={this._onPlay}\n                            onReady={this._onReady}\n                            onProgress={this.handleProgress}\n                            onDuration={this.handleDuration}\n                            onSeek={this._onSeek}>\n                        </ReactPlayer>\n                    </Row>\n                    <div className=\"container-wrapper\">\n                        <div className=\"container-transcript\">\n                            {!listening? <div className=\"sys-instruction\">Click below to start talking!</div> :\n                            transcript? <div className=\"sys-instruction\">You said: </div>\n                            : <Blink color='black' text='Say something to the system!' fontSize='70'/> }\n                            <div className=\"text-option\">\n                            {transcript}\n                            </div>\n                            <br/>\n                            <Clickable  className=\"voice-button\" onClick={this.onListenHandler}>\n                                {listening? <div className=\"voice-command\">\"Stop Talking\"</div>\n                                :<div className=\"voice-command\">\"Start Talking\"</div>}\n                            </Clickable>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"split-right\" >\n                    <div className=\"search-bar-top\">\n                        <div className=\"last-command\">{this.state.last_query}</div>\n                    </div>\n                    <form onSubmit={this.onRequestSearchHandler}>\n                        <input type=\"text\" className=\"search-bar\"/>\n                    </form>\n                    </div>    \n                </Container>\n                <Container className=\"lower-page\">\n\n                <Timeline   videoTime={this.state.playedSeconds} duration={this.state.duration} ></Timeline>\n                <Segments videoID={this.state.videoID} videoTime={this.state.playedSeconds} jumpVideo = {this.jumpVideo} current_level = {this.state.current_level}></Segments>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default Home;\n","/Users/mina/Desktop/video-a11y/demo/src/components/Timeline.js",["45","46","47","48"],"import React from \"react\";\nimport '../App.css';\nimport {Progress} from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Clickable } from 'react-clickable';\nimport { css } from \"@emotion/react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\n\nfunction formatTime(time) {\n    time = Math.round(time);\n  \n    var minutes = Math.floor(time / 60),\n        seconds = time - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    return minutes + \":\" + seconds;\n}\n\n  const override = css`\n  position: absolute;\n  font-size: 5px;\n  height: 5px;\n  left: 69vw; \n  margin-top: -3.8vh;\n`;\n\n\n\nexport default class Timeline extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hoverPreview: false,\n        };\n\n        this.showPreview = this.showPreview.bind(this);\n    }\n\n   \n\n\n    showPreview = (index) => {\n        this.setState({hoverPreview: index});\n    }\n\n\n\n    render() {\n        const { videoTime, duration} = this.props;\n        const { showPreview } = this;\n        return (\n            <div className=\"progressBar-container\">\n                <div className=\"progressBar\">\n                    <Progress percent={Math.floor(videoTime/duration*100)}color='light-grey' />\n                    <div className=\"time-progress\">{formatTime(videoTime)}</div>\n                </div>\n            </div>\n        );\n    }};","/Users/mina/Desktop/video-a11y/demo/src/scripts.js",[],"/Users/mina/Desktop/video-a11y/demo/src/components/Segments.js",["49","50","51","52","53","54","55","56","57","58","59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":8,"column":3,"nodeType":"66","messageId":"67","endLine":10,"endColumn":4},{"ruleId":"68","severity":1,"message":"69","line":3,"column":26,"nodeType":"70","messageId":"71","endLine":3,"endColumn":31},{"ruleId":"68","severity":1,"message":"72","line":3,"column":33,"nodeType":"70","messageId":"71","endLine":3,"endColumn":40},{"ruleId":"68","severity":1,"message":"73","line":98,"column":26,"nodeType":"70","messageId":"71","endLine":98,"endColumn":33},{"ruleId":"68","severity":1,"message":"74","line":99,"column":17,"nodeType":"70","messageId":"71","endLine":99,"endColumn":24},{"ruleId":"68","severity":1,"message":"75","line":99,"column":26,"nodeType":"70","messageId":"71","endLine":99,"endColumn":42},{"ruleId":"68","severity":1,"message":"76","line":99,"column":44,"nodeType":"70","messageId":"71","endLine":99,"endColumn":53},{"ruleId":"68","severity":1,"message":"77","line":99,"column":55,"nodeType":"70","messageId":"71","endLine":99,"endColumn":76},{"ruleId":"78","severity":1,"message":"79","line":129,"column":33,"nodeType":"80","endLine":129,"endColumn":97},{"ruleId":"68","severity":1,"message":"81","line":5,"column":10,"nodeType":"70","messageId":"71","endLine":5,"endColumn":19},{"ruleId":"68","severity":1,"message":"82","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":19},{"ruleId":"68","severity":1,"message":"83","line":19,"column":9,"nodeType":"70","messageId":"71","endLine":19,"endColumn":17},{"ruleId":"68","severity":1,"message":"84","line":50,"column":17,"nodeType":"70","messageId":"71","endLine":50,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":22,"column":56,"nodeType":"87","messageId":"88","endLine":22,"endColumn":58},{"ruleId":"85","severity":1,"message":"86","line":24,"column":57,"nodeType":"87","messageId":"88","endLine":24,"endColumn":59},{"ruleId":"89","severity":1,"message":"90","line":59,"column":16,"nodeType":"70","messageId":"91","endLine":59,"endColumn":17},{"ruleId":"89","severity":1,"message":"92","line":59,"column":23,"nodeType":"70","messageId":"91","endLine":59,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":72,"column":9,"nodeType":"95","messageId":"96","endLine":87,"endColumn":10},{"ruleId":"89","severity":1,"message":"97","line":80,"column":17,"nodeType":"70","messageId":"91","endLine":80,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":90,"column":9,"nodeType":"95","messageId":"96","endLine":106,"endColumn":10},{"ruleId":"89","severity":1,"message":"97","line":92,"column":17,"nodeType":"70","messageId":"91","endLine":92,"endColumn":21},{"ruleId":"89","severity":1,"message":"98","line":97,"column":17,"nodeType":"70","messageId":"91","endLine":97,"endColumn":20},{"ruleId":"89","severity":1,"message":"97","line":98,"column":17,"nodeType":"70","messageId":"91","endLine":98,"endColumn":21},{"ruleId":"68","severity":1,"message":"99","line":112,"column":17,"nodeType":"70","messageId":"71","endLine":112,"endColumn":24},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'Message' is defined but never used.","'playing' is assigned a value but never used.","'addFlag' is assigned a value but never used.","'flagClickHandler' is assigned a value but never used.","'showFlags' is assigned a value but never used.","'addParticipationPoint' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Clickable' is defined but never used.","'ScaleLoader' is defined but never used.","'override' is assigned a value but never used.","'showPreview' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'l' is already defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'time' is already defined.","'len' is already defined.","'videoID' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]